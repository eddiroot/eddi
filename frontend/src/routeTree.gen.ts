/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SettingsImport } from './routes/settings'
import { Route as ProfileImport } from './routes/profile'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as BillingImport } from './routes/billing'
import { Route as IndexImport } from './routes/index'
import { Route as InstitutionsIndexImport } from './routes/institutions/index'
import { Route as InstitutionsInstitutionIdIndexImport } from './routes/institutions/$institutionId/index'
import { Route as InstitutionsInstitutionIdCoursesIndexImport } from './routes/institutions/$institutionId/courses/index'
import { Route as InstitutionsInstitutionIdCoursesCourseIdLayoutImport } from './routes/institutions/$institutionId/courses/$courseId/_layout'
import { Route as InstitutionsInstitutionIdCoursesCourseIdLayoutWorkspacesImport } from './routes/institutions/$institutionId/courses/$courseId/_layout/workspaces'
import { Route as InstitutionsInstitutionIdCoursesCourseIdLayoutNotesImport } from './routes/institutions/$institutionId/courses/$courseId/_layout/notes'
import { Route as InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionImport } from './routes/institutions/$institutionId/courses/$courseId/_layout/discussion'
import { Route as InstitutionsInstitutionIdCoursesCourseIdLayoutChatImport } from './routes/institutions/$institutionId/courses/$courseId/_layout/chat'
import { Route as InstitutionsInstitutionIdCoursesCourseIdLayoutBotImport } from './routes/institutions/$institutionId/courses/$courseId/_layout/bot'
import { Route as InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsIndexImport } from './routes/institutions/$institutionId/courses/$courseId/_layout/lessons/index'
import { Route as InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsNewImport } from './routes/institutions/$institutionId/courses/$courseId/_layout/lessons/new'
import { Route as InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsLessonIdImport } from './routes/institutions/$institutionId/courses/$courseId/_layout/lessons/$lessonId'
import { Route as InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionNewImport } from './routes/institutions/$institutionId/courses/$courseId/_layout/discussion.new'
import { Route as InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionThreadIdImport } from './routes/institutions/$institutionId/courses/$courseId/_layout/discussion.$threadId'

// Create Virtual Routes

const InstitutionsInstitutionIdCoursesCourseIdImport = createFileRoute(
  '/institutions/$institutionId/courses/$courseId',
)()

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const BillingRoute = BillingImport.update({
  path: '/billing',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const InstitutionsIndexRoute = InstitutionsIndexImport.update({
  path: '/institutions/',
  getParentRoute: () => rootRoute,
} as any)

const InstitutionsInstitutionIdIndexRoute =
  InstitutionsInstitutionIdIndexImport.update({
    path: '/institutions/$institutionId/',
    getParentRoute: () => rootRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdRoute =
  InstitutionsInstitutionIdCoursesCourseIdImport.update({
    path: '/institutions/$institutionId/courses/$courseId',
    getParentRoute: () => rootRoute,
  } as any)

const InstitutionsInstitutionIdCoursesIndexRoute =
  InstitutionsInstitutionIdCoursesIndexImport.update({
    path: '/institutions/$institutionId/courses/',
    getParentRoute: () => rootRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdLayoutRoute =
  InstitutionsInstitutionIdCoursesCourseIdLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => InstitutionsInstitutionIdCoursesCourseIdRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdLayoutWorkspacesRoute =
  InstitutionsInstitutionIdCoursesCourseIdLayoutWorkspacesImport.update({
    path: '/workspaces',
    getParentRoute: () => InstitutionsInstitutionIdCoursesCourseIdLayoutRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdLayoutNotesRoute =
  InstitutionsInstitutionIdCoursesCourseIdLayoutNotesImport.update({
    path: '/notes',
    getParentRoute: () => InstitutionsInstitutionIdCoursesCourseIdLayoutRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRoute =
  InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionImport.update({
    path: '/discussion',
    getParentRoute: () => InstitutionsInstitutionIdCoursesCourseIdLayoutRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdLayoutChatRoute =
  InstitutionsInstitutionIdCoursesCourseIdLayoutChatImport.update({
    path: '/chat',
    getParentRoute: () => InstitutionsInstitutionIdCoursesCourseIdLayoutRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdLayoutBotRoute =
  InstitutionsInstitutionIdCoursesCourseIdLayoutBotImport.update({
    path: '/bot',
    getParentRoute: () => InstitutionsInstitutionIdCoursesCourseIdLayoutRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsIndexRoute =
  InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsIndexImport.update({
    path: '/lessons/',
    getParentRoute: () => InstitutionsInstitutionIdCoursesCourseIdLayoutRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsNewRoute =
  InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsNewImport.update({
    path: '/lessons/new',
    getParentRoute: () => InstitutionsInstitutionIdCoursesCourseIdLayoutRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsLessonIdRoute =
  InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsLessonIdImport.update({
    path: '/lessons/$lessonId',
    getParentRoute: () => InstitutionsInstitutionIdCoursesCourseIdLayoutRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionNewRoute =
  InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionNewImport.update({
    path: '/new',
    getParentRoute: () =>
      InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionThreadIdRoute =
  InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionThreadIdImport.update(
    {
      path: '/$threadId',
      getParentRoute: () =>
        InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/billing': {
      id: '/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof BillingImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/institutions/': {
      id: '/institutions/'
      path: '/institutions'
      fullPath: '/institutions'
      preLoaderRoute: typeof InstitutionsIndexImport
      parentRoute: typeof rootRoute
    }
    '/institutions/$institutionId/': {
      id: '/institutions/$institutionId/'
      path: '/institutions/$institutionId'
      fullPath: '/institutions/$institutionId'
      preLoaderRoute: typeof InstitutionsInstitutionIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/institutions/$institutionId/courses/': {
      id: '/institutions/$institutionId/courses/'
      path: '/institutions/$institutionId/courses'
      fullPath: '/institutions/$institutionId/courses'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesIndexImport
      parentRoute: typeof rootRoute
    }
    '/institutions/$institutionId/courses/$courseId': {
      id: '/institutions/$institutionId/courses/$courseId'
      path: '/institutions/$institutionId/courses/$courseId'
      fullPath: '/institutions/$institutionId/courses/$courseId'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdImport
      parentRoute: typeof rootRoute
    }
    '/institutions/$institutionId/courses/$courseId/_layout': {
      id: '/institutions/$institutionId/courses/$courseId/_layout'
      path: '/institutions/$institutionId/courses/$courseId'
      fullPath: '/institutions/$institutionId/courses/$courseId'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutImport
      parentRoute: typeof InstitutionsInstitutionIdCoursesCourseIdRoute
    }
    '/institutions/$institutionId/courses/$courseId/_layout/bot': {
      id: '/institutions/$institutionId/courses/$courseId/_layout/bot'
      path: '/bot'
      fullPath: '/institutions/$institutionId/courses/$courseId/bot'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutBotImport
      parentRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutImport
    }
    '/institutions/$institutionId/courses/$courseId/_layout/chat': {
      id: '/institutions/$institutionId/courses/$courseId/_layout/chat'
      path: '/chat'
      fullPath: '/institutions/$institutionId/courses/$courseId/chat'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutChatImport
      parentRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutImport
    }
    '/institutions/$institutionId/courses/$courseId/_layout/discussion': {
      id: '/institutions/$institutionId/courses/$courseId/_layout/discussion'
      path: '/discussion'
      fullPath: '/institutions/$institutionId/courses/$courseId/discussion'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionImport
      parentRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutImport
    }
    '/institutions/$institutionId/courses/$courseId/_layout/notes': {
      id: '/institutions/$institutionId/courses/$courseId/_layout/notes'
      path: '/notes'
      fullPath: '/institutions/$institutionId/courses/$courseId/notes'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutNotesImport
      parentRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutImport
    }
    '/institutions/$institutionId/courses/$courseId/_layout/workspaces': {
      id: '/institutions/$institutionId/courses/$courseId/_layout/workspaces'
      path: '/workspaces'
      fullPath: '/institutions/$institutionId/courses/$courseId/workspaces'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutWorkspacesImport
      parentRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutImport
    }
    '/institutions/$institutionId/courses/$courseId/_layout/discussion/$threadId': {
      id: '/institutions/$institutionId/courses/$courseId/_layout/discussion/$threadId'
      path: '/$threadId'
      fullPath: '/institutions/$institutionId/courses/$courseId/discussion/$threadId'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionThreadIdImport
      parentRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionImport
    }
    '/institutions/$institutionId/courses/$courseId/_layout/discussion/new': {
      id: '/institutions/$institutionId/courses/$courseId/_layout/discussion/new'
      path: '/new'
      fullPath: '/institutions/$institutionId/courses/$courseId/discussion/new'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionNewImport
      parentRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionImport
    }
    '/institutions/$institutionId/courses/$courseId/_layout/lessons/$lessonId': {
      id: '/institutions/$institutionId/courses/$courseId/_layout/lessons/$lessonId'
      path: '/lessons/$lessonId'
      fullPath: '/institutions/$institutionId/courses/$courseId/lessons/$lessonId'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsLessonIdImport
      parentRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutImport
    }
    '/institutions/$institutionId/courses/$courseId/_layout/lessons/new': {
      id: '/institutions/$institutionId/courses/$courseId/_layout/lessons/new'
      path: '/lessons/new'
      fullPath: '/institutions/$institutionId/courses/$courseId/lessons/new'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsNewImport
      parentRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutImport
    }
    '/institutions/$institutionId/courses/$courseId/_layout/lessons/': {
      id: '/institutions/$institutionId/courses/$courseId/_layout/lessons/'
      path: '/lessons'
      fullPath: '/institutions/$institutionId/courses/$courseId/lessons'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsIndexImport
      parentRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutImport
    }
  }
}

// Create and export the route tree

interface InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRouteChildren {
  InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionThreadIdRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionThreadIdRoute
  InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionNewRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionNewRoute
}

const InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRouteChildren: InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRouteChildren =
  {
    InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionThreadIdRoute:
      InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionThreadIdRoute,
    InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionNewRoute:
      InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionNewRoute,
  }

const InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRouteWithChildren =
  InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRoute._addFileChildren(
    InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRouteChildren,
  )

interface InstitutionsInstitutionIdCoursesCourseIdLayoutRouteChildren {
  InstitutionsInstitutionIdCoursesCourseIdLayoutBotRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutBotRoute
  InstitutionsInstitutionIdCoursesCourseIdLayoutChatRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutChatRoute
  InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRouteWithChildren
  InstitutionsInstitutionIdCoursesCourseIdLayoutNotesRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutNotesRoute
  InstitutionsInstitutionIdCoursesCourseIdLayoutWorkspacesRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutWorkspacesRoute
  InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsLessonIdRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsLessonIdRoute
  InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsNewRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsNewRoute
  InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsIndexRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsIndexRoute
}

const InstitutionsInstitutionIdCoursesCourseIdLayoutRouteChildren: InstitutionsInstitutionIdCoursesCourseIdLayoutRouteChildren =
  {
    InstitutionsInstitutionIdCoursesCourseIdLayoutBotRoute:
      InstitutionsInstitutionIdCoursesCourseIdLayoutBotRoute,
    InstitutionsInstitutionIdCoursesCourseIdLayoutChatRoute:
      InstitutionsInstitutionIdCoursesCourseIdLayoutChatRoute,
    InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRoute:
      InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRouteWithChildren,
    InstitutionsInstitutionIdCoursesCourseIdLayoutNotesRoute:
      InstitutionsInstitutionIdCoursesCourseIdLayoutNotesRoute,
    InstitutionsInstitutionIdCoursesCourseIdLayoutWorkspacesRoute:
      InstitutionsInstitutionIdCoursesCourseIdLayoutWorkspacesRoute,
    InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsLessonIdRoute:
      InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsLessonIdRoute,
    InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsNewRoute:
      InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsNewRoute,
    InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsIndexRoute:
      InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsIndexRoute,
  }

const InstitutionsInstitutionIdCoursesCourseIdLayoutRouteWithChildren =
  InstitutionsInstitutionIdCoursesCourseIdLayoutRoute._addFileChildren(
    InstitutionsInstitutionIdCoursesCourseIdLayoutRouteChildren,
  )

interface InstitutionsInstitutionIdCoursesCourseIdRouteChildren {
  InstitutionsInstitutionIdCoursesCourseIdLayoutRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLayoutRouteWithChildren
}

const InstitutionsInstitutionIdCoursesCourseIdRouteChildren: InstitutionsInstitutionIdCoursesCourseIdRouteChildren =
  {
    InstitutionsInstitutionIdCoursesCourseIdLayoutRoute:
      InstitutionsInstitutionIdCoursesCourseIdLayoutRouteWithChildren,
  }

const InstitutionsInstitutionIdCoursesCourseIdRouteWithChildren =
  InstitutionsInstitutionIdCoursesCourseIdRoute._addFileChildren(
    InstitutionsInstitutionIdCoursesCourseIdRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/billing': typeof BillingRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/settings': typeof SettingsRoute
  '/signup': typeof SignupRoute
  '/institutions': typeof InstitutionsIndexRoute
  '/institutions/$institutionId': typeof InstitutionsInstitutionIdIndexRoute
  '/institutions/$institutionId/courses': typeof InstitutionsInstitutionIdCoursesIndexRoute
  '/institutions/$institutionId/courses/$courseId': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutRouteWithChildren
  '/institutions/$institutionId/courses/$courseId/bot': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutBotRoute
  '/institutions/$institutionId/courses/$courseId/chat': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutChatRoute
  '/institutions/$institutionId/courses/$courseId/discussion': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRouteWithChildren
  '/institutions/$institutionId/courses/$courseId/notes': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutNotesRoute
  '/institutions/$institutionId/courses/$courseId/workspaces': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutWorkspacesRoute
  '/institutions/$institutionId/courses/$courseId/discussion/$threadId': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionThreadIdRoute
  '/institutions/$institutionId/courses/$courseId/discussion/new': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionNewRoute
  '/institutions/$institutionId/courses/$courseId/lessons/$lessonId': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsLessonIdRoute
  '/institutions/$institutionId/courses/$courseId/lessons/new': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsNewRoute
  '/institutions/$institutionId/courses/$courseId/lessons': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/billing': typeof BillingRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/settings': typeof SettingsRoute
  '/signup': typeof SignupRoute
  '/institutions': typeof InstitutionsIndexRoute
  '/institutions/$institutionId': typeof InstitutionsInstitutionIdIndexRoute
  '/institutions/$institutionId/courses': typeof InstitutionsInstitutionIdCoursesIndexRoute
  '/institutions/$institutionId/courses/$courseId': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutRouteWithChildren
  '/institutions/$institutionId/courses/$courseId/bot': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutBotRoute
  '/institutions/$institutionId/courses/$courseId/chat': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutChatRoute
  '/institutions/$institutionId/courses/$courseId/discussion': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRouteWithChildren
  '/institutions/$institutionId/courses/$courseId/notes': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutNotesRoute
  '/institutions/$institutionId/courses/$courseId/workspaces': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutWorkspacesRoute
  '/institutions/$institutionId/courses/$courseId/discussion/$threadId': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionThreadIdRoute
  '/institutions/$institutionId/courses/$courseId/discussion/new': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionNewRoute
  '/institutions/$institutionId/courses/$courseId/lessons/$lessonId': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsLessonIdRoute
  '/institutions/$institutionId/courses/$courseId/lessons/new': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsNewRoute
  '/institutions/$institutionId/courses/$courseId/lessons': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/billing': typeof BillingRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/settings': typeof SettingsRoute
  '/signup': typeof SignupRoute
  '/institutions/': typeof InstitutionsIndexRoute
  '/institutions/$institutionId/': typeof InstitutionsInstitutionIdIndexRoute
  '/institutions/$institutionId/courses/': typeof InstitutionsInstitutionIdCoursesIndexRoute
  '/institutions/$institutionId/courses/$courseId': typeof InstitutionsInstitutionIdCoursesCourseIdRouteWithChildren
  '/institutions/$institutionId/courses/$courseId/_layout': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutRouteWithChildren
  '/institutions/$institutionId/courses/$courseId/_layout/bot': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutBotRoute
  '/institutions/$institutionId/courses/$courseId/_layout/chat': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutChatRoute
  '/institutions/$institutionId/courses/$courseId/_layout/discussion': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionRouteWithChildren
  '/institutions/$institutionId/courses/$courseId/_layout/notes': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutNotesRoute
  '/institutions/$institutionId/courses/$courseId/_layout/workspaces': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutWorkspacesRoute
  '/institutions/$institutionId/courses/$courseId/_layout/discussion/$threadId': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionThreadIdRoute
  '/institutions/$institutionId/courses/$courseId/_layout/discussion/new': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutDiscussionNewRoute
  '/institutions/$institutionId/courses/$courseId/_layout/lessons/$lessonId': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsLessonIdRoute
  '/institutions/$institutionId/courses/$courseId/_layout/lessons/new': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsNewRoute
  '/institutions/$institutionId/courses/$courseId/_layout/lessons/': typeof InstitutionsInstitutionIdCoursesCourseIdLayoutLessonsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/billing'
    | '/dashboard'
    | '/login'
    | '/profile'
    | '/settings'
    | '/signup'
    | '/institutions'
    | '/institutions/$institutionId'
    | '/institutions/$institutionId/courses'
    | '/institutions/$institutionId/courses/$courseId'
    | '/institutions/$institutionId/courses/$courseId/bot'
    | '/institutions/$institutionId/courses/$courseId/chat'
    | '/institutions/$institutionId/courses/$courseId/discussion'
    | '/institutions/$institutionId/courses/$courseId/notes'
    | '/institutions/$institutionId/courses/$courseId/workspaces'
    | '/institutions/$institutionId/courses/$courseId/discussion/$threadId'
    | '/institutions/$institutionId/courses/$courseId/discussion/new'
    | '/institutions/$institutionId/courses/$courseId/lessons/$lessonId'
    | '/institutions/$institutionId/courses/$courseId/lessons/new'
    | '/institutions/$institutionId/courses/$courseId/lessons'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/billing'
    | '/dashboard'
    | '/login'
    | '/profile'
    | '/settings'
    | '/signup'
    | '/institutions'
    | '/institutions/$institutionId'
    | '/institutions/$institutionId/courses'
    | '/institutions/$institutionId/courses/$courseId'
    | '/institutions/$institutionId/courses/$courseId/bot'
    | '/institutions/$institutionId/courses/$courseId/chat'
    | '/institutions/$institutionId/courses/$courseId/discussion'
    | '/institutions/$institutionId/courses/$courseId/notes'
    | '/institutions/$institutionId/courses/$courseId/workspaces'
    | '/institutions/$institutionId/courses/$courseId/discussion/$threadId'
    | '/institutions/$institutionId/courses/$courseId/discussion/new'
    | '/institutions/$institutionId/courses/$courseId/lessons/$lessonId'
    | '/institutions/$institutionId/courses/$courseId/lessons/new'
    | '/institutions/$institutionId/courses/$courseId/lessons'
  id:
    | '__root__'
    | '/'
    | '/billing'
    | '/dashboard'
    | '/login'
    | '/profile'
    | '/settings'
    | '/signup'
    | '/institutions/'
    | '/institutions/$institutionId/'
    | '/institutions/$institutionId/courses/'
    | '/institutions/$institutionId/courses/$courseId'
    | '/institutions/$institutionId/courses/$courseId/_layout'
    | '/institutions/$institutionId/courses/$courseId/_layout/bot'
    | '/institutions/$institutionId/courses/$courseId/_layout/chat'
    | '/institutions/$institutionId/courses/$courseId/_layout/discussion'
    | '/institutions/$institutionId/courses/$courseId/_layout/notes'
    | '/institutions/$institutionId/courses/$courseId/_layout/workspaces'
    | '/institutions/$institutionId/courses/$courseId/_layout/discussion/$threadId'
    | '/institutions/$institutionId/courses/$courseId/_layout/discussion/new'
    | '/institutions/$institutionId/courses/$courseId/_layout/lessons/$lessonId'
    | '/institutions/$institutionId/courses/$courseId/_layout/lessons/new'
    | '/institutions/$institutionId/courses/$courseId/_layout/lessons/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BillingRoute: typeof BillingRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  SettingsRoute: typeof SettingsRoute
  SignupRoute: typeof SignupRoute
  InstitutionsIndexRoute: typeof InstitutionsIndexRoute
  InstitutionsInstitutionIdIndexRoute: typeof InstitutionsInstitutionIdIndexRoute
  InstitutionsInstitutionIdCoursesIndexRoute: typeof InstitutionsInstitutionIdCoursesIndexRoute
  InstitutionsInstitutionIdCoursesCourseIdRoute: typeof InstitutionsInstitutionIdCoursesCourseIdRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BillingRoute: BillingRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  SettingsRoute: SettingsRoute,
  SignupRoute: SignupRoute,
  InstitutionsIndexRoute: InstitutionsIndexRoute,
  InstitutionsInstitutionIdIndexRoute: InstitutionsInstitutionIdIndexRoute,
  InstitutionsInstitutionIdCoursesIndexRoute:
    InstitutionsInstitutionIdCoursesIndexRoute,
  InstitutionsInstitutionIdCoursesCourseIdRoute:
    InstitutionsInstitutionIdCoursesCourseIdRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/billing",
        "/dashboard",
        "/login",
        "/profile",
        "/settings",
        "/signup",
        "/institutions/",
        "/institutions/$institutionId/",
        "/institutions/$institutionId/courses/",
        "/institutions/$institutionId/courses/$courseId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/billing": {
      "filePath": "billing.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/institutions/": {
      "filePath": "institutions/index.tsx"
    },
    "/institutions/$institutionId/": {
      "filePath": "institutions/$institutionId/index.tsx"
    },
    "/institutions/$institutionId/courses/": {
      "filePath": "institutions/$institutionId/courses/index.tsx"
    },
    "/institutions/$institutionId/courses/$courseId": {
      "filePath": "institutions/$institutionId/courses/$courseId",
      "children": [
        "/institutions/$institutionId/courses/$courseId/_layout"
      ]
    },
    "/institutions/$institutionId/courses/$courseId/_layout": {
      "filePath": "institutions/$institutionId/courses/$courseId/_layout.tsx",
      "parent": "/institutions/$institutionId/courses/$courseId",
      "children": [
        "/institutions/$institutionId/courses/$courseId/_layout/bot",
        "/institutions/$institutionId/courses/$courseId/_layout/chat",
        "/institutions/$institutionId/courses/$courseId/_layout/discussion",
        "/institutions/$institutionId/courses/$courseId/_layout/notes",
        "/institutions/$institutionId/courses/$courseId/_layout/workspaces",
        "/institutions/$institutionId/courses/$courseId/_layout/lessons/$lessonId",
        "/institutions/$institutionId/courses/$courseId/_layout/lessons/new",
        "/institutions/$institutionId/courses/$courseId/_layout/lessons/"
      ]
    },
    "/institutions/$institutionId/courses/$courseId/_layout/bot": {
      "filePath": "institutions/$institutionId/courses/$courseId/_layout/bot.tsx",
      "parent": "/institutions/$institutionId/courses/$courseId/_layout"
    },
    "/institutions/$institutionId/courses/$courseId/_layout/chat": {
      "filePath": "institutions/$institutionId/courses/$courseId/_layout/chat.tsx",
      "parent": "/institutions/$institutionId/courses/$courseId/_layout"
    },
    "/institutions/$institutionId/courses/$courseId/_layout/discussion": {
      "filePath": "institutions/$institutionId/courses/$courseId/_layout/discussion.tsx",
      "parent": "/institutions/$institutionId/courses/$courseId/_layout",
      "children": [
        "/institutions/$institutionId/courses/$courseId/_layout/discussion/$threadId",
        "/institutions/$institutionId/courses/$courseId/_layout/discussion/new"
      ]
    },
    "/institutions/$institutionId/courses/$courseId/_layout/notes": {
      "filePath": "institutions/$institutionId/courses/$courseId/_layout/notes.tsx",
      "parent": "/institutions/$institutionId/courses/$courseId/_layout"
    },
    "/institutions/$institutionId/courses/$courseId/_layout/workspaces": {
      "filePath": "institutions/$institutionId/courses/$courseId/_layout/workspaces.tsx",
      "parent": "/institutions/$institutionId/courses/$courseId/_layout"
    },
    "/institutions/$institutionId/courses/$courseId/_layout/discussion/$threadId": {
      "filePath": "institutions/$institutionId/courses/$courseId/_layout/discussion.$threadId.tsx",
      "parent": "/institutions/$institutionId/courses/$courseId/_layout/discussion"
    },
    "/institutions/$institutionId/courses/$courseId/_layout/discussion/new": {
      "filePath": "institutions/$institutionId/courses/$courseId/_layout/discussion.new.tsx",
      "parent": "/institutions/$institutionId/courses/$courseId/_layout/discussion"
    },
    "/institutions/$institutionId/courses/$courseId/_layout/lessons/$lessonId": {
      "filePath": "institutions/$institutionId/courses/$courseId/_layout/lessons/$lessonId.tsx",
      "parent": "/institutions/$institutionId/courses/$courseId/_layout"
    },
    "/institutions/$institutionId/courses/$courseId/_layout/lessons/new": {
      "filePath": "institutions/$institutionId/courses/$courseId/_layout/lessons/new.tsx",
      "parent": "/institutions/$institutionId/courses/$courseId/_layout"
    },
    "/institutions/$institutionId/courses/$courseId/_layout/lessons/": {
      "filePath": "institutions/$institutionId/courses/$courseId/_layout/lessons/index.tsx",
      "parent": "/institutions/$institutionId/courses/$courseId/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
