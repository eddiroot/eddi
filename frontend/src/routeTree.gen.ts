/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SettingsImport } from './routes/settings'
import { Route as ProfileImport } from './routes/profile'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as BillingImport } from './routes/billing'
import { Route as IndexImport } from './routes/index'
import { Route as InstitutionsIndexImport } from './routes/institutions/index'
import { Route as InstitutionsInstitutionIdIndexImport } from './routes/institutions/$institutionId/index'
import { Route as InstitutionsInstitutionIdCoursesIndexImport } from './routes/institutions/$institutionId/courses/index'
import { Route as InstitutionsInstitutionIdCoursesCourseIdWorkspacesImport } from './routes/institutions/$institutionId/courses/$courseId/workspaces'
import { Route as InstitutionsInstitutionIdCoursesCourseIdLessonsImport } from './routes/institutions/$institutionId/courses/$courseId/lessons'
import { Route as InstitutionsInstitutionIdCoursesCourseIdDiscussionImport } from './routes/institutions/$institutionId/courses/$courseId/discussion'
import { Route as InstitutionsInstitutionIdCoursesCourseIdChatImport } from './routes/institutions/$institutionId/courses/$courseId/chat'
import { Route as InstitutionsInstitutionIdCoursesCourseIdDiscussionNewImport } from './routes/institutions/$institutionId/courses/$courseId/discussion.new'
import { Route as InstitutionsInstitutionIdCoursesCourseIdDiscussionThreadIdImport } from './routes/institutions/$institutionId/courses/$courseId/discussion.$threadId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const BillingRoute = BillingImport.update({
  path: '/billing',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const InstitutionsIndexRoute = InstitutionsIndexImport.update({
  path: '/institutions/',
  getParentRoute: () => rootRoute,
} as any)

const InstitutionsInstitutionIdIndexRoute =
  InstitutionsInstitutionIdIndexImport.update({
    path: '/institutions/$institutionId/',
    getParentRoute: () => rootRoute,
  } as any)

const InstitutionsInstitutionIdCoursesIndexRoute =
  InstitutionsInstitutionIdCoursesIndexImport.update({
    path: '/institutions/$institutionId/courses/',
    getParentRoute: () => rootRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdWorkspacesRoute =
  InstitutionsInstitutionIdCoursesCourseIdWorkspacesImport.update({
    path: '/institutions/$institutionId/courses/$courseId/workspaces',
    getParentRoute: () => rootRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdLessonsRoute =
  InstitutionsInstitutionIdCoursesCourseIdLessonsImport.update({
    path: '/institutions/$institutionId/courses/$courseId/lessons',
    getParentRoute: () => rootRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdDiscussionRoute =
  InstitutionsInstitutionIdCoursesCourseIdDiscussionImport.update({
    path: '/institutions/$institutionId/courses/$courseId/discussion',
    getParentRoute: () => rootRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdChatRoute =
  InstitutionsInstitutionIdCoursesCourseIdChatImport.update({
    path: '/institutions/$institutionId/courses/$courseId/chat',
    getParentRoute: () => rootRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdDiscussionNewRoute =
  InstitutionsInstitutionIdCoursesCourseIdDiscussionNewImport.update({
    path: '/new',
    getParentRoute: () =>
      InstitutionsInstitutionIdCoursesCourseIdDiscussionRoute,
  } as any)

const InstitutionsInstitutionIdCoursesCourseIdDiscussionThreadIdRoute =
  InstitutionsInstitutionIdCoursesCourseIdDiscussionThreadIdImport.update({
    path: '/$threadId',
    getParentRoute: () =>
      InstitutionsInstitutionIdCoursesCourseIdDiscussionRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/billing': {
      id: '/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof BillingImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/institutions/': {
      id: '/institutions/'
      path: '/institutions'
      fullPath: '/institutions'
      preLoaderRoute: typeof InstitutionsIndexImport
      parentRoute: typeof rootRoute
    }
    '/institutions/$institutionId/': {
      id: '/institutions/$institutionId/'
      path: '/institutions/$institutionId'
      fullPath: '/institutions/$institutionId'
      preLoaderRoute: typeof InstitutionsInstitutionIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/institutions/$institutionId/courses/': {
      id: '/institutions/$institutionId/courses/'
      path: '/institutions/$institutionId/courses'
      fullPath: '/institutions/$institutionId/courses'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesIndexImport
      parentRoute: typeof rootRoute
    }
    '/institutions/$institutionId/courses/$courseId/chat': {
      id: '/institutions/$institutionId/courses/$courseId/chat'
      path: '/institutions/$institutionId/courses/$courseId/chat'
      fullPath: '/institutions/$institutionId/courses/$courseId/chat'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdChatImport
      parentRoute: typeof rootRoute
    }
    '/institutions/$institutionId/courses/$courseId/discussion': {
      id: '/institutions/$institutionId/courses/$courseId/discussion'
      path: '/institutions/$institutionId/courses/$courseId/discussion'
      fullPath: '/institutions/$institutionId/courses/$courseId/discussion'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionImport
      parentRoute: typeof rootRoute
    }
    '/institutions/$institutionId/courses/$courseId/lessons': {
      id: '/institutions/$institutionId/courses/$courseId/lessons'
      path: '/institutions/$institutionId/courses/$courseId/lessons'
      fullPath: '/institutions/$institutionId/courses/$courseId/lessons'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLessonsImport
      parentRoute: typeof rootRoute
    }
    '/institutions/$institutionId/courses/$courseId/workspaces': {
      id: '/institutions/$institutionId/courses/$courseId/workspaces'
      path: '/institutions/$institutionId/courses/$courseId/workspaces'
      fullPath: '/institutions/$institutionId/courses/$courseId/workspaces'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdWorkspacesImport
      parentRoute: typeof rootRoute
    }
    '/institutions/$institutionId/courses/$courseId/discussion/$threadId': {
      id: '/institutions/$institutionId/courses/$courseId/discussion/$threadId'
      path: '/$threadId'
      fullPath: '/institutions/$institutionId/courses/$courseId/discussion/$threadId'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionThreadIdImport
      parentRoute: typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionImport
    }
    '/institutions/$institutionId/courses/$courseId/discussion/new': {
      id: '/institutions/$institutionId/courses/$courseId/discussion/new'
      path: '/new'
      fullPath: '/institutions/$institutionId/courses/$courseId/discussion/new'
      preLoaderRoute: typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionNewImport
      parentRoute: typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionImport
    }
  }
}

// Create and export the route tree

interface InstitutionsInstitutionIdCoursesCourseIdDiscussionRouteChildren {
  InstitutionsInstitutionIdCoursesCourseIdDiscussionThreadIdRoute: typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionThreadIdRoute
  InstitutionsInstitutionIdCoursesCourseIdDiscussionNewRoute: typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionNewRoute
}

const InstitutionsInstitutionIdCoursesCourseIdDiscussionRouteChildren: InstitutionsInstitutionIdCoursesCourseIdDiscussionRouteChildren =
  {
    InstitutionsInstitutionIdCoursesCourseIdDiscussionThreadIdRoute:
      InstitutionsInstitutionIdCoursesCourseIdDiscussionThreadIdRoute,
    InstitutionsInstitutionIdCoursesCourseIdDiscussionNewRoute:
      InstitutionsInstitutionIdCoursesCourseIdDiscussionNewRoute,
  }

const InstitutionsInstitutionIdCoursesCourseIdDiscussionRouteWithChildren =
  InstitutionsInstitutionIdCoursesCourseIdDiscussionRoute._addFileChildren(
    InstitutionsInstitutionIdCoursesCourseIdDiscussionRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/billing': typeof BillingRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/settings': typeof SettingsRoute
  '/signup': typeof SignupRoute
  '/institutions': typeof InstitutionsIndexRoute
  '/institutions/$institutionId': typeof InstitutionsInstitutionIdIndexRoute
  '/institutions/$institutionId/courses': typeof InstitutionsInstitutionIdCoursesIndexRoute
  '/institutions/$institutionId/courses/$courseId/chat': typeof InstitutionsInstitutionIdCoursesCourseIdChatRoute
  '/institutions/$institutionId/courses/$courseId/discussion': typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionRouteWithChildren
  '/institutions/$institutionId/courses/$courseId/lessons': typeof InstitutionsInstitutionIdCoursesCourseIdLessonsRoute
  '/institutions/$institutionId/courses/$courseId/workspaces': typeof InstitutionsInstitutionIdCoursesCourseIdWorkspacesRoute
  '/institutions/$institutionId/courses/$courseId/discussion/$threadId': typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionThreadIdRoute
  '/institutions/$institutionId/courses/$courseId/discussion/new': typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionNewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/billing': typeof BillingRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/settings': typeof SettingsRoute
  '/signup': typeof SignupRoute
  '/institutions': typeof InstitutionsIndexRoute
  '/institutions/$institutionId': typeof InstitutionsInstitutionIdIndexRoute
  '/institutions/$institutionId/courses': typeof InstitutionsInstitutionIdCoursesIndexRoute
  '/institutions/$institutionId/courses/$courseId/chat': typeof InstitutionsInstitutionIdCoursesCourseIdChatRoute
  '/institutions/$institutionId/courses/$courseId/discussion': typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionRouteWithChildren
  '/institutions/$institutionId/courses/$courseId/lessons': typeof InstitutionsInstitutionIdCoursesCourseIdLessonsRoute
  '/institutions/$institutionId/courses/$courseId/workspaces': typeof InstitutionsInstitutionIdCoursesCourseIdWorkspacesRoute
  '/institutions/$institutionId/courses/$courseId/discussion/$threadId': typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionThreadIdRoute
  '/institutions/$institutionId/courses/$courseId/discussion/new': typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionNewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/billing': typeof BillingRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/settings': typeof SettingsRoute
  '/signup': typeof SignupRoute
  '/institutions/': typeof InstitutionsIndexRoute
  '/institutions/$institutionId/': typeof InstitutionsInstitutionIdIndexRoute
  '/institutions/$institutionId/courses/': typeof InstitutionsInstitutionIdCoursesIndexRoute
  '/institutions/$institutionId/courses/$courseId/chat': typeof InstitutionsInstitutionIdCoursesCourseIdChatRoute
  '/institutions/$institutionId/courses/$courseId/discussion': typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionRouteWithChildren
  '/institutions/$institutionId/courses/$courseId/lessons': typeof InstitutionsInstitutionIdCoursesCourseIdLessonsRoute
  '/institutions/$institutionId/courses/$courseId/workspaces': typeof InstitutionsInstitutionIdCoursesCourseIdWorkspacesRoute
  '/institutions/$institutionId/courses/$courseId/discussion/$threadId': typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionThreadIdRoute
  '/institutions/$institutionId/courses/$courseId/discussion/new': typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionNewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/billing'
    | '/dashboard'
    | '/login'
    | '/profile'
    | '/settings'
    | '/signup'
    | '/institutions'
    | '/institutions/$institutionId'
    | '/institutions/$institutionId/courses'
    | '/institutions/$institutionId/courses/$courseId/chat'
    | '/institutions/$institutionId/courses/$courseId/discussion'
    | '/institutions/$institutionId/courses/$courseId/lessons'
    | '/institutions/$institutionId/courses/$courseId/workspaces'
    | '/institutions/$institutionId/courses/$courseId/discussion/$threadId'
    | '/institutions/$institutionId/courses/$courseId/discussion/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/billing'
    | '/dashboard'
    | '/login'
    | '/profile'
    | '/settings'
    | '/signup'
    | '/institutions'
    | '/institutions/$institutionId'
    | '/institutions/$institutionId/courses'
    | '/institutions/$institutionId/courses/$courseId/chat'
    | '/institutions/$institutionId/courses/$courseId/discussion'
    | '/institutions/$institutionId/courses/$courseId/lessons'
    | '/institutions/$institutionId/courses/$courseId/workspaces'
    | '/institutions/$institutionId/courses/$courseId/discussion/$threadId'
    | '/institutions/$institutionId/courses/$courseId/discussion/new'
  id:
    | '__root__'
    | '/'
    | '/billing'
    | '/dashboard'
    | '/login'
    | '/profile'
    | '/settings'
    | '/signup'
    | '/institutions/'
    | '/institutions/$institutionId/'
    | '/institutions/$institutionId/courses/'
    | '/institutions/$institutionId/courses/$courseId/chat'
    | '/institutions/$institutionId/courses/$courseId/discussion'
    | '/institutions/$institutionId/courses/$courseId/lessons'
    | '/institutions/$institutionId/courses/$courseId/workspaces'
    | '/institutions/$institutionId/courses/$courseId/discussion/$threadId'
    | '/institutions/$institutionId/courses/$courseId/discussion/new'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BillingRoute: typeof BillingRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  SettingsRoute: typeof SettingsRoute
  SignupRoute: typeof SignupRoute
  InstitutionsIndexRoute: typeof InstitutionsIndexRoute
  InstitutionsInstitutionIdIndexRoute: typeof InstitutionsInstitutionIdIndexRoute
  InstitutionsInstitutionIdCoursesIndexRoute: typeof InstitutionsInstitutionIdCoursesIndexRoute
  InstitutionsInstitutionIdCoursesCourseIdChatRoute: typeof InstitutionsInstitutionIdCoursesCourseIdChatRoute
  InstitutionsInstitutionIdCoursesCourseIdDiscussionRoute: typeof InstitutionsInstitutionIdCoursesCourseIdDiscussionRouteWithChildren
  InstitutionsInstitutionIdCoursesCourseIdLessonsRoute: typeof InstitutionsInstitutionIdCoursesCourseIdLessonsRoute
  InstitutionsInstitutionIdCoursesCourseIdWorkspacesRoute: typeof InstitutionsInstitutionIdCoursesCourseIdWorkspacesRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BillingRoute: BillingRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  SettingsRoute: SettingsRoute,
  SignupRoute: SignupRoute,
  InstitutionsIndexRoute: InstitutionsIndexRoute,
  InstitutionsInstitutionIdIndexRoute: InstitutionsInstitutionIdIndexRoute,
  InstitutionsInstitutionIdCoursesIndexRoute:
    InstitutionsInstitutionIdCoursesIndexRoute,
  InstitutionsInstitutionIdCoursesCourseIdChatRoute:
    InstitutionsInstitutionIdCoursesCourseIdChatRoute,
  InstitutionsInstitutionIdCoursesCourseIdDiscussionRoute:
    InstitutionsInstitutionIdCoursesCourseIdDiscussionRouteWithChildren,
  InstitutionsInstitutionIdCoursesCourseIdLessonsRoute:
    InstitutionsInstitutionIdCoursesCourseIdLessonsRoute,
  InstitutionsInstitutionIdCoursesCourseIdWorkspacesRoute:
    InstitutionsInstitutionIdCoursesCourseIdWorkspacesRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/billing",
        "/dashboard",
        "/login",
        "/profile",
        "/settings",
        "/signup",
        "/institutions/",
        "/institutions/$institutionId/",
        "/institutions/$institutionId/courses/",
        "/institutions/$institutionId/courses/$courseId/chat",
        "/institutions/$institutionId/courses/$courseId/discussion",
        "/institutions/$institutionId/courses/$courseId/lessons",
        "/institutions/$institutionId/courses/$courseId/workspaces"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/billing": {
      "filePath": "billing.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/institutions/": {
      "filePath": "institutions/index.tsx"
    },
    "/institutions/$institutionId/": {
      "filePath": "institutions/$institutionId/index.tsx"
    },
    "/institutions/$institutionId/courses/": {
      "filePath": "institutions/$institutionId/courses/index.tsx"
    },
    "/institutions/$institutionId/courses/$courseId/chat": {
      "filePath": "institutions/$institutionId/courses/$courseId/chat.tsx"
    },
    "/institutions/$institutionId/courses/$courseId/discussion": {
      "filePath": "institutions/$institutionId/courses/$courseId/discussion.tsx",
      "children": [
        "/institutions/$institutionId/courses/$courseId/discussion/$threadId",
        "/institutions/$institutionId/courses/$courseId/discussion/new"
      ]
    },
    "/institutions/$institutionId/courses/$courseId/lessons": {
      "filePath": "institutions/$institutionId/courses/$courseId/lessons.tsx"
    },
    "/institutions/$institutionId/courses/$courseId/workspaces": {
      "filePath": "institutions/$institutionId/courses/$courseId/workspaces.tsx"
    },
    "/institutions/$institutionId/courses/$courseId/discussion/$threadId": {
      "filePath": "institutions/$institutionId/courses/$courseId/discussion.$threadId.tsx",
      "parent": "/institutions/$institutionId/courses/$courseId/discussion"
    },
    "/institutions/$institutionId/courses/$courseId/discussion/new": {
      "filePath": "institutions/$institutionId/courses/$courseId/discussion.new.tsx",
      "parent": "/institutions/$institutionId/courses/$courseId/discussion"
    }
  }
}
ROUTE_MANIFEST_END */
