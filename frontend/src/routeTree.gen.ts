/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from "./routes/signup";
import { Route as LoginImport } from "./routes/login";
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from "./routes/index";
import { Route as InstitutionIdIndexImport } from './routes/$institutionId/index'
import { Route as InstitutionIdCoursesIndexImport } from './routes/$institutionId/courses/index'
import { Route as InstitutionIdCoursesCourseIdWorkspacesImport } from './routes/$institutionId/courses/$courseId.workspaces'
import { Route as InstitutionIdCoursesCourseIdLessonsImport } from './routes/$institutionId/courses/$courseId.lessons'
import { Route as InstitutionIdCoursesCourseIdDiscussionImport } from './routes/$institutionId/courses/$courseId.discussion'
import { Route as InstitutionIdCoursesCourseIdChatImport } from './routes/$institutionId/courses/$courseId.chat'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: "/signup",
  getParentRoute: () => rootRoute,
} as any);

const LoginRoute = LoginImport.update({
  path: "/login",
  getParentRoute: () => rootRoute,
} as any);

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const InstitutionIdIndexRoute = InstitutionIdIndexImport.update({
  path: '/$institutionId/',
  getParentRoute: () => rootRoute,
} as any)

const InstitutionIdCoursesIndexRoute = InstitutionIdCoursesIndexImport.update({
  path: '/$institutionId/courses/',
  getParentRoute: () => rootRoute,
} as any)

const InstitutionIdCoursesCourseIdWorkspacesRoute =
  InstitutionIdCoursesCourseIdWorkspacesImport.update({
    path: '/$institutionId/courses/$courseId/workspaces',
    getParentRoute: () => rootRoute,
  } as any)

const InstitutionIdCoursesCourseIdLessonsRoute =
  InstitutionIdCoursesCourseIdLessonsImport.update({
    path: '/$institutionId/courses/$courseId/lessons',
    getParentRoute: () => rootRoute,
  } as any)

const InstitutionIdCoursesCourseIdDiscussionRoute =
  InstitutionIdCoursesCourseIdDiscussionImport.update({
    path: '/$institutionId/courses/$courseId/discussion',
    getParentRoute: () => rootRoute,
  } as any)

const InstitutionIdCoursesCourseIdChatRoute =
  InstitutionIdCoursesCourseIdChatImport.update({
    path: '/$institutionId/courses/$courseId/chat',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/dashboard": {
      id: "/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof DashboardImport;
      parentRoute: typeof rootRoute;
    };
    "/login": {
      id: "/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginImport;
      parentRoute: typeof rootRoute;
    };
    "/signup": {
      id: "/signup";
      path: "/signup";
      fullPath: "/signup";
      preLoaderRoute: typeof SignupImport;
      parentRoute: typeof rootRoute;
    };
    "/$institutionId/": {
      id: "/$institutionId/";
      path: "/$institutionId";
      fullPath: "/$institutionId";
      preLoaderRoute: typeof InstitutionIdIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/$institutionId/courses/": {
      id: "/$institutionId/courses/";
      path: "/$institutionId/courses";
      fullPath: "/$institutionId/courses";
      preLoaderRoute: typeof InstitutionIdCoursesIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/$institutionId/courses/$courseId/chat": {
      id: "/$institutionId/courses/$courseId/chat";
      path: "/$institutionId/courses/$courseId/chat";
      fullPath: "/$institutionId/courses/$courseId/chat";
      preLoaderRoute: typeof InstitutionIdCoursesCourseIdChatImport;
      parentRoute: typeof rootRoute;
    };
    "/$institutionId/courses/$courseId/discussion": {
      id: "/$institutionId/courses/$courseId/discussion";
      path: "/$institutionId/courses/$courseId/discussion";
      fullPath: "/$institutionId/courses/$courseId/discussion";
      preLoaderRoute: typeof InstitutionIdCoursesCourseIdDiscussionImport;
      parentRoute: typeof rootRoute;
    };
    "/$institutionId/courses/$courseId/lessons": {
      id: "/$institutionId/courses/$courseId/lessons";
      path: "/$institutionId/courses/$courseId/lessons";
      fullPath: "/$institutionId/courses/$courseId/lessons";
      preLoaderRoute: typeof InstitutionIdCoursesCourseIdLessonsImport;
      parentRoute: typeof rootRoute;
    };
    "/$institutionId/courses/$courseId/workspaces": {
      id: "/$institutionId/courses/$courseId/workspaces";
      path: "/$institutionId/courses/$courseId/workspaces";
      fullPath: "/$institutionId/courses/$courseId/workspaces";
      preLoaderRoute: typeof InstitutionIdCoursesCourseIdWorkspacesImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/dashboard": typeof DashboardRoute;
  "/login": typeof LoginRoute;
  "/signup": typeof SignupRoute;
  "/$institutionId": typeof InstitutionIdIndexRoute;
  "/$institutionId/courses": typeof InstitutionIdCoursesIndexRoute;
  "/$institutionId/courses/$courseId/chat": typeof InstitutionIdCoursesCourseIdChatRoute;
  "/$institutionId/courses/$courseId/discussion": typeof InstitutionIdCoursesCourseIdDiscussionRoute;
  "/$institutionId/courses/$courseId/lessons": typeof InstitutionIdCoursesCourseIdLessonsRoute;
  "/$institutionId/courses/$courseId/workspaces": typeof InstitutionIdCoursesCourseIdWorkspacesRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/dashboard": typeof DashboardRoute;
  "/login": typeof LoginRoute;
  "/signup": typeof SignupRoute;
  "/$institutionId": typeof InstitutionIdIndexRoute;
  "/$institutionId/courses": typeof InstitutionIdCoursesIndexRoute;
  "/$institutionId/courses/$courseId/chat": typeof InstitutionIdCoursesCourseIdChatRoute;
  "/$institutionId/courses/$courseId/discussion": typeof InstitutionIdCoursesCourseIdDiscussionRoute;
  "/$institutionId/courses/$courseId/lessons": typeof InstitutionIdCoursesCourseIdLessonsRoute;
  "/$institutionId/courses/$courseId/workspaces": typeof InstitutionIdCoursesCourseIdWorkspacesRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/dashboard": typeof DashboardRoute;
  "/login": typeof LoginRoute;
  "/signup": typeof SignupRoute;
  "/$institutionId/": typeof InstitutionIdIndexRoute;
  "/$institutionId/courses/": typeof InstitutionIdCoursesIndexRoute;
  "/$institutionId/courses/$courseId/chat": typeof InstitutionIdCoursesCourseIdChatRoute;
  "/$institutionId/courses/$courseId/discussion": typeof InstitutionIdCoursesCourseIdDiscussionRoute;
  "/$institutionId/courses/$courseId/lessons": typeof InstitutionIdCoursesCourseIdLessonsRoute;
  "/$institutionId/courses/$courseId/workspaces": typeof InstitutionIdCoursesCourseIdWorkspacesRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/dashboard"
    | "/login"
    | "/signup"
    | "/$institutionId"
    | "/$institutionId/courses"
    | "/$institutionId/courses/$courseId/chat"
    | "/$institutionId/courses/$courseId/discussion"
    | "/$institutionId/courses/$courseId/lessons"
    | "/$institutionId/courses/$courseId/workspaces";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/dashboard"
    | "/login"
    | "/signup"
    | "/$institutionId"
    | "/$institutionId/courses"
    | "/$institutionId/courses/$courseId/chat"
    | "/$institutionId/courses/$courseId/discussion"
    | "/$institutionId/courses/$courseId/lessons"
    | "/$institutionId/courses/$courseId/workspaces";
  id:
    | "__root__"
    | "/"
    | "/dashboard"
    | "/login"
    | "/signup"
    | "/$institutionId/"
    | "/$institutionId/courses/"
    | "/$institutionId/courses/$courseId/chat"
    | "/$institutionId/courses/$courseId/discussion"
    | "/$institutionId/courses/$courseId/lessons"
    | "/$institutionId/courses/$courseId/workspaces";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  DashboardRoute: typeof DashboardRoute;
  LoginRoute: typeof LoginRoute;
  SignupRoute: typeof SignupRoute;
  InstitutionIdIndexRoute: typeof InstitutionIdIndexRoute;
  InstitutionIdCoursesIndexRoute: typeof InstitutionIdCoursesIndexRoute;
  InstitutionIdCoursesCourseIdChatRoute: typeof InstitutionIdCoursesCourseIdChatRoute;
  InstitutionIdCoursesCourseIdDiscussionRoute: typeof InstitutionIdCoursesCourseIdDiscussionRoute;
  InstitutionIdCoursesCourseIdLessonsRoute: typeof InstitutionIdCoursesCourseIdLessonsRoute;
  InstitutionIdCoursesCourseIdWorkspacesRoute: typeof InstitutionIdCoursesCourseIdWorkspacesRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  InstitutionIdIndexRoute: InstitutionIdIndexRoute,
  InstitutionIdCoursesIndexRoute: InstitutionIdCoursesIndexRoute,
  InstitutionIdCoursesCourseIdChatRoute: InstitutionIdCoursesCourseIdChatRoute,
  InstitutionIdCoursesCourseIdDiscussionRoute:
    InstitutionIdCoursesCourseIdDiscussionRoute,
  InstitutionIdCoursesCourseIdLessonsRoute:
    InstitutionIdCoursesCourseIdLessonsRoute,
  InstitutionIdCoursesCourseIdWorkspacesRoute:
    InstitutionIdCoursesCourseIdWorkspacesRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/login",
        "/signup",
        "/$institutionId/",
        "/$institutionId/courses/",
        "/$institutionId/courses/$courseId/chat",
        "/$institutionId/courses/$courseId/discussion",
        "/$institutionId/courses/$courseId/lessons",
        "/$institutionId/courses/$courseId/workspaces"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/$institutionId/": {
      "filePath": "$institutionId/index.tsx"
    },
    "/$institutionId/courses/": {
      "filePath": "$institutionId/courses/index.tsx"
    },
    "/$institutionId/courses/$courseId/chat": {
      "filePath": "$institutionId/courses/$courseId.chat.tsx"
    },
    "/$institutionId/courses/$courseId/discussion": {
      "filePath": "$institutionId/courses/$courseId.discussion.tsx"
    },
    "/$institutionId/courses/$courseId/lessons": {
      "filePath": "$institutionId/courses/$courseId.lessons.tsx"
    },
    "/$institutionId/courses/$courseId/workspaces": {
      "filePath": "$institutionId/courses/$courseId.workspaces.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
