//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var CourseLessonSection = newCourseLessonSectionTable("public", "CourseLessonSection", "")

type courseLessonSectionTable struct {
	postgres.Table

	// Columns
	ID             postgres.ColumnInteger
	CourseLessonId postgres.ColumnInteger
	Title          postgres.ColumnString
	CreatedAt      postgres.ColumnTimestamp
	ModifiedAt     postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
	DefaultColumns postgres.ColumnList
}

type CourseLessonSectionTable struct {
	courseLessonSectionTable

	EXCLUDED courseLessonSectionTable
}

// AS creates new CourseLessonSectionTable with assigned alias
func (a CourseLessonSectionTable) AS(alias string) *CourseLessonSectionTable {
	return newCourseLessonSectionTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CourseLessonSectionTable with assigned schema name
func (a CourseLessonSectionTable) FromSchema(schemaName string) *CourseLessonSectionTable {
	return newCourseLessonSectionTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CourseLessonSectionTable with assigned table prefix
func (a CourseLessonSectionTable) WithPrefix(prefix string) *CourseLessonSectionTable {
	return newCourseLessonSectionTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CourseLessonSectionTable with assigned table suffix
func (a CourseLessonSectionTable) WithSuffix(suffix string) *CourseLessonSectionTable {
	return newCourseLessonSectionTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCourseLessonSectionTable(schemaName, tableName, alias string) *CourseLessonSectionTable {
	return &CourseLessonSectionTable{
		courseLessonSectionTable: newCourseLessonSectionTableImpl(schemaName, tableName, alias),
		EXCLUDED:                 newCourseLessonSectionTableImpl("", "excluded", ""),
	}
}

func newCourseLessonSectionTableImpl(schemaName, tableName, alias string) courseLessonSectionTable {
	var (
		IDColumn             = postgres.IntegerColumn("id")
		CourseLessonIdColumn = postgres.IntegerColumn("courseLessonId")
		TitleColumn          = postgres.StringColumn("title")
		CreatedAtColumn      = postgres.TimestampColumn("createdAt")
		ModifiedAtColumn     = postgres.TimestampColumn("modifiedAt")
		allColumns           = postgres.ColumnList{IDColumn, CourseLessonIdColumn, TitleColumn, CreatedAtColumn, ModifiedAtColumn}
		mutableColumns       = postgres.ColumnList{CourseLessonIdColumn, TitleColumn, CreatedAtColumn, ModifiedAtColumn}
		defaultColumns       = postgres.ColumnList{IDColumn, CreatedAtColumn}
	)

	return courseLessonSectionTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:             IDColumn,
		CourseLessonId: CourseLessonIdColumn,
		Title:          TitleColumn,
		CreatedAt:      CreatedAtColumn,
		ModifiedAt:     ModifiedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
