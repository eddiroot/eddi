//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var CourseThreadResponse = newCourseThreadResponseTable("public", "CourseThreadResponse", "")

type courseThreadResponseTable struct {
	postgres.Table

	// Columns
	ID               postgres.ColumnInteger
	CourseThreadId   postgres.ColumnInteger
	UserId           postgres.ColumnInteger
	Content          postgres.ColumnString
	ParentResponseId postgres.ColumnInteger
	CreatedAt        postgres.ColumnTimestamp
	ModifiedAt       postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
	DefaultColumns postgres.ColumnList
}

type CourseThreadResponseTable struct {
	courseThreadResponseTable

	EXCLUDED courseThreadResponseTable
}

// AS creates new CourseThreadResponseTable with assigned alias
func (a CourseThreadResponseTable) AS(alias string) *CourseThreadResponseTable {
	return newCourseThreadResponseTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CourseThreadResponseTable with assigned schema name
func (a CourseThreadResponseTable) FromSchema(schemaName string) *CourseThreadResponseTable {
	return newCourseThreadResponseTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CourseThreadResponseTable with assigned table prefix
func (a CourseThreadResponseTable) WithPrefix(prefix string) *CourseThreadResponseTable {
	return newCourseThreadResponseTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CourseThreadResponseTable with assigned table suffix
func (a CourseThreadResponseTable) WithSuffix(suffix string) *CourseThreadResponseTable {
	return newCourseThreadResponseTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCourseThreadResponseTable(schemaName, tableName, alias string) *CourseThreadResponseTable {
	return &CourseThreadResponseTable{
		courseThreadResponseTable: newCourseThreadResponseTableImpl(schemaName, tableName, alias),
		EXCLUDED:                  newCourseThreadResponseTableImpl("", "excluded", ""),
	}
}

func newCourseThreadResponseTableImpl(schemaName, tableName, alias string) courseThreadResponseTable {
	var (
		IDColumn               = postgres.IntegerColumn("id")
		CourseThreadIdColumn   = postgres.IntegerColumn("courseThreadId")
		UserIdColumn           = postgres.IntegerColumn("userId")
		ContentColumn          = postgres.StringColumn("content")
		ParentResponseIdColumn = postgres.IntegerColumn("parentResponseId")
		CreatedAtColumn        = postgres.TimestampColumn("createdAt")
		ModifiedAtColumn       = postgres.TimestampColumn("modifiedAt")
		allColumns             = postgres.ColumnList{IDColumn, CourseThreadIdColumn, UserIdColumn, ContentColumn, ParentResponseIdColumn, CreatedAtColumn, ModifiedAtColumn}
		mutableColumns         = postgres.ColumnList{CourseThreadIdColumn, UserIdColumn, ContentColumn, ParentResponseIdColumn, CreatedAtColumn, ModifiedAtColumn}
		defaultColumns         = postgres.ColumnList{IDColumn, CreatedAtColumn}
	)

	return courseThreadResponseTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:               IDColumn,
		CourseThreadId:   CourseThreadIdColumn,
		UserId:           UserIdColumn,
		Content:          ContentColumn,
		ParentResponseId: ParentResponseIdColumn,
		CreatedAt:        CreatedAtColumn,
		ModifiedAt:       ModifiedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
